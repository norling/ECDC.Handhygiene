// <auto-generated />
using System;
using Fhi.Handhygiene.Dataaksess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fhi.Handhygiene.Dataaksess.Migrations
{
    [DbContext(typeof(HandhygieneContext))]
    [Migration("20210426110508_Aktivitet_AktivitetType")]
    partial class Aktivitet_AktivitetType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AvdelingRolle", b =>
                {
                    b.Property<int>("AvdelingerId")
                        .HasColumnType("int");

                    b.Property<int>("RollerId")
                        .HasColumnType("int");

                    b.HasKey("AvdelingerId", "RollerId");

                    b.HasIndex("RollerId");

                    b.ToTable("AvdelingRolle");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Bruker.Bruker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Helsepersonellregisternummer")
                        .HasColumnType("int");

                    b.Property<int?>("InstitusjonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstitusjonId");

                    b.ToTable("Bruker");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Bruker");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Aktivitet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AktivitetTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("BenyttetHanske")
                        .HasColumnType("bit");

                    b.Property<int>("SekunderBrukt")
                        .HasColumnType("int");

                    b.Property<bool>("TidtakingBleUtfort")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AktivitetTypeId");

                    b.ToTable("Aktivitet");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.AktivitetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Navn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AktivitetType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.FireIndikasjonerObservasjon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AktivitetId")
                        .HasColumnType("int");

                    b.Property<Guid?>("FireIndikasjonerSesjonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kommentar")
                        .HasMaxLength(4096)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Opprettettidspunkt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Registrerttidspunkt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RolleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AktivitetId");

                    b.HasIndex("FireIndikasjonerSesjonId");

                    b.HasIndex("RolleId");

                    b.ToTable("FireIndikasjonerObservasjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.IndikasjonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IndikasjonTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Navn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Navn");

                    b.ToTable("IndikasjonType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Rolle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InstitusjonId")
                        .HasColumnType("int");

                    b.Property<string>("Navn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InstitusjonId");

                    b.HasIndex("Navn");

                    b.ToTable("Rolle");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sesjon.Sesjon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AvdelingId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kommentar")
                        .HasMaxLength(4096)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ObservatørId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Opprettettidspunkt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Starttidspunkt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AvdelingId");

                    b.HasIndex("ObservatørId");

                    b.ToTable("Sesjon");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Sesjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.Avdeling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InstitusjonId")
                        .HasColumnType("int");

                    b.Property<string>("Navn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstitusjonId");

                    b.ToTable("Avdeling");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.Institusjon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ErAktiv")
                        .HasColumnType("bit");

                    b.Property<string>("Forkortelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Navn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Institusjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.PredefinertKommentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InstitusjonId")
                        .HasColumnType("int");

                    b.Property<string>("Kommentar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstitusjonId");

                    b.ToTable("PredefinertKommentar");
                });

            modelBuilder.Entity("FireIndikasjonerObservasjonIndikasjonType", b =>
                {
                    b.Property<int>("IndikasjonstyperId")
                        .HasColumnType("int");

                    b.Property<Guid>("ObservasjonerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IndikasjonstyperId", "ObservasjonerId");

                    b.HasIndex("ObservasjonerId");

                    b.ToTable("FireIndikasjonerObservasjonIndikasjonType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Bruker.Observatør", b =>
                {
                    b.HasBaseType("Fhi.Handhygiene.Domene.Bruker.Bruker");

                    b.HasDiscriminator().HasValue("Observatør");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sesjon.FireIndikasjonerSesjon", b =>
                {
                    b.HasBaseType("Fhi.Handhygiene.Domene.Sesjon.Sesjon");

                    b.HasDiscriminator().HasValue("FireIndikasjonerSesjon");
                });

            modelBuilder.Entity("AvdelingRolle", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sted.Avdeling", null)
                        .WithMany()
                        .HasForeignKey("AvdelingerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Rolle", null)
                        .WithMany()
                        .HasForeignKey("RollerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Bruker.Bruker", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sted.Institusjon", "Institusjon")
                        .WithMany("Brukere")
                        .HasForeignKey("InstitusjonId");

                    b.Navigation("Institusjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Aktivitet", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.AktivitetType", "AktivitetType")
                        .WithMany()
                        .HasForeignKey("AktivitetTypeId");

                    b.Navigation("AktivitetType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.FireIndikasjonerObservasjon", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Aktivitet", "Aktivitet")
                        .WithMany()
                        .HasForeignKey("AktivitetId");

                    b.HasOne("Fhi.Handhygiene.Domene.Sesjon.FireIndikasjonerSesjon", null)
                        .WithMany("Observasjoner")
                        .HasForeignKey("FireIndikasjonerSesjonId");

                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Rolle", "Rolle")
                        .WithMany()
                        .HasForeignKey("RolleId");

                    b.Navigation("Aktivitet");

                    b.Navigation("Rolle");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Rolle", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sted.Institusjon", "Institusjon")
                        .WithMany("Roller")
                        .HasForeignKey("InstitusjonId");

                    b.Navigation("Institusjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sesjon.Sesjon", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sted.Avdeling", "Avdeling")
                        .WithMany()
                        .HasForeignKey("AvdelingId");

                    b.HasOne("Fhi.Handhygiene.Domene.Bruker.Observatør", "Observatør")
                        .WithMany()
                        .HasForeignKey("ObservatørId");

                    b.Navigation("Avdeling");

                    b.Navigation("Observatør");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.Avdeling", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sted.Institusjon", null)
                        .WithMany("Avdelinger")
                        .HasForeignKey("InstitusjonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.PredefinertKommentar", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sted.Institusjon", null)
                        .WithMany("PredefinerteKommmentarer")
                        .HasForeignKey("InstitusjonId");
                });

            modelBuilder.Entity("FireIndikasjonerObservasjonIndikasjonType", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.IndikasjonType", null)
                        .WithMany()
                        .HasForeignKey("IndikasjonstyperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.FireIndikasjonerObservasjon", null)
                        .WithMany()
                        .HasForeignKey("ObservasjonerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.Institusjon", b =>
                {
                    b.Navigation("Avdelinger");

                    b.Navigation("Brukere");

                    b.Navigation("PredefinerteKommmentarer");

                    b.Navigation("Roller");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sesjon.FireIndikasjonerSesjon", b =>
                {
                    b.Navigation("Observasjoner");
                });
#pragma warning restore 612, 618
        }
    }
}
