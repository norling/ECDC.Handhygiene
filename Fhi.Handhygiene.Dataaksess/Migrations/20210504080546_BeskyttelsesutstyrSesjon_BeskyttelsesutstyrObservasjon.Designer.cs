// <auto-generated />
using System;
using Fhi.Handhygiene.Dataaksess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fhi.Handhygiene.Dataaksess.Migrations
{
    [DbContext(typeof(HandhygieneContext))]
    [Migration("20210504080546_BeskyttelsesutstyrSesjon_BeskyttelsesutstyrObservasjon")]
    partial class BeskyttelsesutstyrSesjon_BeskyttelsesutstyrObservasjon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AvdelingRolle", b =>
                {
                    b.Property<int>("AvdelingerId")
                        .HasColumnType("int");

                    b.Property<int>("RollerId")
                        .HasColumnType("int");

                    b.HasKey("AvdelingerId", "RollerId");

                    b.HasIndex("RollerId");

                    b.ToTable("AvdelingRolle");
                });

            modelBuilder.Entity("BeskyttelsesutstyrFeilbrukType", b =>
                {
                    b.Property<int>("BeskyttelsesutstyrId")
                        .HasColumnType("int");

                    b.Property<int>("FeilbruktyperId")
                        .HasColumnType("int");

                    b.HasKey("BeskyttelsesutstyrId", "FeilbruktyperId");

                    b.HasIndex("FeilbruktyperId");

                    b.ToTable("BeskyttelsesutstyrFeilbrukType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Bruker.Bruker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Etternavn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fornavn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Helsepersonellregisternummer")
                        .HasColumnType("int");

                    b.Property<int?>("InstitusjonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Opprettettidspunkt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstitusjonId");

                    b.ToTable("Bruker");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Bruker");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Aktivitet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AktivitetTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("BenyttetHanske")
                        .HasColumnType("bit");

                    b.Property<int>("SekunderBrukt")
                        .HasColumnType("int");

                    b.Property<bool>("TidtakingBleUtfort")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AktivitetTypeId");

                    b.ToTable("Aktivitet");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.AktivitetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Navn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AktivitetType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.Beskyttelsesutstyr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("BeskyttelsesutstyrObservasjonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("BleBenyttet")
                        .HasColumnType("bit");

                    b.Property<bool>("BleBenyttetRiktig")
                        .HasColumnType("bit");

                    b.Property<bool>("ErIndikert")
                        .HasColumnType("bit");

                    b.Property<string>("Kommentar")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("UtstyrstypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeskyttelsesutstyrObservasjonId");

                    b.HasIndex("UtstyrstypeId");

                    b.ToTable("Beskyttelsesutstyr");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrObservasjon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BeskyttelsesutstyrSesjonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kommentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Opprettettidspunkt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Registrerttidspunkt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RolleId")
                        .HasColumnType("int");

                    b.Property<int?>("SettingtypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeskyttelsesutstyrSesjonId");

                    b.HasIndex("RolleId");

                    b.HasIndex("SettingtypeId");

                    b.ToTable("BeskyttelsesutstyrObservasjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Navn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Kode");

                    b.ToTable("BeskyttelsesutstyrType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrsettingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Navn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Kode");

                    b.ToTable("BeskyttelsesutstyrsettingType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrsettingTypeBeskyttelsesutstyrType", b =>
                {
                    b.Property<int>("BeskyttelsesutstyrTypeId")
                        .HasColumnType("int");

                    b.Property<int>("BeskyttelsesutstyrsettingTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("ErDefaultIndikert")
                        .HasColumnType("bit");

                    b.HasKey("BeskyttelsesutstyrTypeId", "BeskyttelsesutstyrsettingTypeId");

                    b.HasIndex("BeskyttelsesutstyrsettingTypeId");

                    b.ToTable("BeskyttelsesutstyrsettingTypeBeskyttelsesutstyrType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.FeilbrukType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BeskyttelsesutstyrTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("ErValgt")
                        .HasColumnType("bit");

                    b.Property<string>("Kode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Navn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BeskyttelsesutstyrTypeId");

                    b.HasIndex("Kode");

                    b.ToTable("FeilbrukType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.FireIndikasjonerObservasjon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AktivitetId")
                        .HasColumnType("int");

                    b.Property<Guid?>("FireIndikasjonerSesjonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kommentar")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("Opprettettidspunkt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Registrerttidspunkt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RolleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AktivitetId");

                    b.HasIndex("FireIndikasjonerSesjonId");

                    b.HasIndex("RolleId");

                    b.ToTable("FireIndikasjonerObservasjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.HandsmykkeObservasjon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HandsmykkeSesjonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kommentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Opprettettidspunkt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Registrerttidspunkt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RolleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HandsmykkeSesjonId");

                    b.HasIndex("RolleId");

                    b.ToTable("HandsmykkeObservasjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.HandsmykkeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Navn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("HandsmykkeType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.IndikasjonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Navn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nummer")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("Navn");

                    b.ToTable("IndikasjonType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Rolle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InstitusjonId")
                        .HasColumnType("int");

                    b.Property<string>("Navn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InstitusjonId");

                    b.HasIndex("Navn");

                    b.ToTable("Rolle");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sesjon.Sesjon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AvdelingId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kommentar")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ObservatørId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Opprettettidspunkt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Starttidspunkt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AvdelingId");

                    b.HasIndex("ObservatørId");

                    b.ToTable("Sesjon");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Sesjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.Avdeling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InstitusjonId")
                        .HasColumnType("int");

                    b.Property<string>("Navn")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("InstitusjonId");

                    b.ToTable("Avdeling");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.Institusjon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ErAktiv")
                        .HasColumnType("bit");

                    b.Property<string>("Forkortelse")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HERId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("InstitusjontypeId")
                        .HasColumnType("int");

                    b.Property<string>("Navn")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("Opprettettidspunkt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Forkortelse");

                    b.HasIndex("HERId");

                    b.HasIndex("InstitusjontypeId");

                    b.HasIndex("Navn");

                    b.ToTable("Institusjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.InstitusjonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Navn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("InstitusjonType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.PredefinertKommentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InstitusjonId")
                        .HasColumnType("int");

                    b.Property<string>("Kommentar")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("InstitusjonId");

                    b.ToTable("PredefinertKommentar");
                });

            modelBuilder.Entity("FireIndikasjonerObservasjonIndikasjonType", b =>
                {
                    b.Property<int>("IndikasjonstyperId")
                        .HasColumnType("int");

                    b.Property<Guid>("ObservasjonerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IndikasjonstyperId", "ObservasjonerId");

                    b.HasIndex("ObservasjonerId");

                    b.ToTable("FireIndikasjonerObservasjonIndikasjonType");
                });

            modelBuilder.Entity("HandsmykkeObservasjonHandsmykkeType", b =>
                {
                    b.Property<int>("HandsmykkerId")
                        .HasColumnType("int");

                    b.Property<Guid>("ObservasjonerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HandsmykkerId", "ObservasjonerId");

                    b.HasIndex("ObservasjonerId");

                    b.ToTable("HandsmykkeObservasjonHandsmykkeType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Bruker.Koordinator", b =>
                {
                    b.HasBaseType("Fhi.Handhygiene.Domene.Bruker.Bruker");

                    b.HasDiscriminator().HasValue("Koordinator");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Bruker.Observatør", b =>
                {
                    b.HasBaseType("Fhi.Handhygiene.Domene.Bruker.Bruker");

                    b.HasDiscriminator().HasValue("Observatør");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sesjon.BeskyttelsesutstyrSesjon", b =>
                {
                    b.HasBaseType("Fhi.Handhygiene.Domene.Sesjon.Sesjon");

                    b.HasDiscriminator().HasValue("BeskyttelsesutstyrSesjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sesjon.FireIndikasjonerSesjon", b =>
                {
                    b.HasBaseType("Fhi.Handhygiene.Domene.Sesjon.Sesjon");

                    b.HasDiscriminator().HasValue("FireIndikasjonerSesjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sesjon.HandsmykkeSesjon", b =>
                {
                    b.HasBaseType("Fhi.Handhygiene.Domene.Sesjon.Sesjon");

                    b.HasDiscriminator().HasValue("HandsmykkeSesjon");
                });

            modelBuilder.Entity("AvdelingRolle", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sted.Avdeling", null)
                        .WithMany()
                        .HasForeignKey("AvdelingerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Rolle", null)
                        .WithMany()
                        .HasForeignKey("RollerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeskyttelsesutstyrFeilbrukType", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.Beskyttelsesutstyr", null)
                        .WithMany()
                        .HasForeignKey("BeskyttelsesutstyrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.FeilbrukType", null)
                        .WithMany()
                        .HasForeignKey("FeilbruktyperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Bruker.Bruker", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sted.Institusjon", "Institusjon")
                        .WithMany("Brukere")
                        .HasForeignKey("InstitusjonId");

                    b.Navigation("Institusjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Aktivitet", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.AktivitetType", "AktivitetType")
                        .WithMany()
                        .HasForeignKey("AktivitetTypeId");

                    b.Navigation("AktivitetType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.Beskyttelsesutstyr", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrObservasjon", null)
                        .WithMany("Beskyttelsesutstyrliste")
                        .HasForeignKey("BeskyttelsesutstyrObservasjonId");

                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrType", "Utstyrstype")
                        .WithMany()
                        .HasForeignKey("UtstyrstypeId");

                    b.Navigation("Utstyrstype");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrObservasjon", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sesjon.BeskyttelsesutstyrSesjon", null)
                        .WithMany("Observasjoner")
                        .HasForeignKey("BeskyttelsesutstyrSesjonId");

                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Rolle", "Rolle")
                        .WithMany()
                        .HasForeignKey("RolleId");

                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrsettingType", "Settingtype")
                        .WithMany()
                        .HasForeignKey("SettingtypeId");

                    b.Navigation("Rolle");

                    b.Navigation("Settingtype");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrsettingTypeBeskyttelsesutstyrType", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrType", "BeskyttelsesutstyrType")
                        .WithMany("BeskyttelsesutstyrsettingTypeBeskyttelsesutstyrTyper")
                        .HasForeignKey("BeskyttelsesutstyrTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrsettingType", "BeskyttelsesutstyrsettingType")
                        .WithMany("BeskyttelsesutstyrsettingTypeBeskyttelsesutstyrTyper")
                        .HasForeignKey("BeskyttelsesutstyrsettingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BeskyttelsesutstyrsettingType");

                    b.Navigation("BeskyttelsesutstyrType");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.FeilbrukType", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrType", null)
                        .WithMany("Feilbruktyper")
                        .HasForeignKey("BeskyttelsesutstyrTypeId");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.FireIndikasjonerObservasjon", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Aktivitet", "Aktivitet")
                        .WithMany()
                        .HasForeignKey("AktivitetId");

                    b.HasOne("Fhi.Handhygiene.Domene.Sesjon.FireIndikasjonerSesjon", null)
                        .WithMany("Observasjoner")
                        .HasForeignKey("FireIndikasjonerSesjonId");

                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Rolle", "Rolle")
                        .WithMany()
                        .HasForeignKey("RolleId");

                    b.Navigation("Aktivitet");

                    b.Navigation("Rolle");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.HandsmykkeObservasjon", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sesjon.HandsmykkeSesjon", null)
                        .WithMany("Observasjoner")
                        .HasForeignKey("HandsmykkeSesjonId");

                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.Rolle", "Rolle")
                        .WithMany()
                        .HasForeignKey("RolleId");

                    b.Navigation("Rolle");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Rolle", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sted.Institusjon", "Institusjon")
                        .WithMany("Roller")
                        .HasForeignKey("InstitusjonId");

                    b.Navigation("Institusjon");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sesjon.Sesjon", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sted.Avdeling", "Avdeling")
                        .WithMany()
                        .HasForeignKey("AvdelingId");

                    b.HasOne("Fhi.Handhygiene.Domene.Bruker.Observatør", "Observatør")
                        .WithMany()
                        .HasForeignKey("ObservatørId");

                    b.Navigation("Avdeling");

                    b.Navigation("Observatør");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.Avdeling", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sted.Institusjon", null)
                        .WithMany("Avdelinger")
                        .HasForeignKey("InstitusjonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.Institusjon", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sted.InstitusjonType", "Institusjontype")
                        .WithMany()
                        .HasForeignKey("InstitusjontypeId");

                    b.Navigation("Institusjontype");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.PredefinertKommentar", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Sted.Institusjon", null)
                        .WithMany("PredefinerteKommmentarer")
                        .HasForeignKey("InstitusjonId");
                });

            modelBuilder.Entity("FireIndikasjonerObservasjonIndikasjonType", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.IndikasjonType", null)
                        .WithMany()
                        .HasForeignKey("IndikasjonstyperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.FireIndikasjonerObservasjon", null)
                        .WithMany()
                        .HasForeignKey("ObservasjonerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HandsmykkeObservasjonHandsmykkeType", b =>
                {
                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.HandsmykkeType", null)
                        .WithMany()
                        .HasForeignKey("HandsmykkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fhi.Handhygiene.Domene.Observasjon.HandsmykkeObservasjon", null)
                        .WithMany()
                        .HasForeignKey("ObservasjonerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrObservasjon", b =>
                {
                    b.Navigation("Beskyttelsesutstyrliste");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrType", b =>
                {
                    b.Navigation("BeskyttelsesutstyrsettingTypeBeskyttelsesutstyrTyper");

                    b.Navigation("Feilbruktyper");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Observasjon.Beskyttelsesutstyr.BeskyttelsesutstyrsettingType", b =>
                {
                    b.Navigation("BeskyttelsesutstyrsettingTypeBeskyttelsesutstyrTyper");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sted.Institusjon", b =>
                {
                    b.Navigation("Avdelinger");

                    b.Navigation("Brukere");

                    b.Navigation("PredefinerteKommmentarer");

                    b.Navigation("Roller");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sesjon.BeskyttelsesutstyrSesjon", b =>
                {
                    b.Navigation("Observasjoner");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sesjon.FireIndikasjonerSesjon", b =>
                {
                    b.Navigation("Observasjoner");
                });

            modelBuilder.Entity("Fhi.Handhygiene.Domene.Sesjon.HandsmykkeSesjon", b =>
                {
                    b.Navigation("Observasjoner");
                });
#pragma warning restore 612, 618
        }
    }
}
